mongo db
show dbs
show collections

db.col.find()
db.col.insertOne()
db.col.insertMany()


conn = pymongo.MongoClient()

db=conn.stu

myset=db.class0

db.close

insert_one()
insert_many()
insert()
save()












    
    
re.findall('目标字符'，‘查询对象’)
| 或
^ 开始位置
$ 结束位置
. 替代换行外的任意字符
[字符集] 
[#abc] 
[a-z]
[^...]
* 匹配前面的字符出现0次或者多次 ab*
+ 匹配规则：匹配前面的字符出现1次或多次
? 匹配前面的字符出现0次或1次
 {n} 匹配前面的字符出现n次
{m-n} 匹配前面的字符出现m-n次
\d 匹配任意数字字符 [0-9]
\D 匹配任意非数字字符 [^0-9]
\w 匹配普通字符 指数字 字母 下划线 和 普通汉字
\W 匹配非普通字符
\s 匹配任意空字符 指 空格 \r \n \t \v \f 字符
\S 匹配任意一个非空字符
\A 匹配字符串开头位置^
\Z 匹配字符串结尾位置$
\b 匹配单词边界位置 r'\b[0-9]{3}\b'
\B 匹配非单词边界位置
r'\n\' 原始字符串
贪婪   *  +  ?  {m,n}
非贪婪 *? +? ?? {m,n}?
re.findall(r'a.*b','asb ajb') --> ['asb ajb']
re.findall(r'a.*?b','asb ajb') --> ['asb', 'ajb']
子组
re.search(r'(ab)+','ababababababab').group()

子组命名
(?P<name>pattern)

re 模块
regex=compile(pattern,flags=0)
    功能:
        生成正则表达式
    参数:
        pattern 正则表达式
        flags 功能标识，扩展正则匹配功能
    返回值:
        正则对象

re.findall(pattern,string,flags=0)



regex.findall(string,pos,endpos)
    参数:
        string 目标字符串
        pos int 截取字符串开始位置，默认表示字符串开头
        endpos int 截取字符串结束位置，默认为字符串结尾
    返回值
        返回匹配到的内容，如果

re.split(pattern,string,flags=0)
    功能:
        使用正则表达式匹配内容切割字符串
    参数:
        pattern 正则
        string 目标字符串
    返回值
        切割后的字符串列表

re.sub(pattern,replace,string,max,flags=0)
    功能:
        使用指定字符串替换正则表达式匹配内容
    参数:
        pattern 正则
        replace 指定字符串
        string 目标字符串
        max 最后替换几处，默认全部替换
    返回值 替换后的字符串

re.subn():功能参数同sub,返回值多一个实际替换个数

re.finditer(pattern,string,flags=0)
    功能
        使用正则表达式匹配目标内容
    参数
        pattern 正则
        string 目标字符串
    返回值
        迭代对象

re.fullmatch(pattern,string,flags=0)
功能
    完全匹配某个目标字符串
参数
    pattern 正则
    string 目标字符串
返回值
    匹配内容match object

re.search(pattern,string,flags=0)
功能：
    匹配目标字符串第一个符合内容
参数：
    pattern 正则
	string  目标字符串
返回值：
    匹配内容match object

常用flag常数
re.A == re.ASCII 元字符只能匹配ascii码
re.I == re.IGNORECASE 匹配忽略字母大小写(大小写一致)
re.S == re.DOTALL 使.可以匹配换行
re.M ==MULTILINE 使^可以匹配每一行开始位置
re.X==VERBOSE 为正则添加注释
多个falg  flags= re.I | re.A





